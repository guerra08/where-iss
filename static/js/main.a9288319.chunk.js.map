{"version":3,"sources":["api/IssNow.js","components/MapComponent.js","App.js","index.js"],"names":["getCurrentIssLocation","a","axios","get","response","status","latitude","data","longitude","MapComponent","markerLocation","projectionConfig","scale","width","height","style","stroke","geography","geographies","map","geo","rsmKey","coordinates","r","fill","App","useState","location","setLocation","isLoading","setIsLoading","useEffect","fetchApi","interval","setInterval","clearInterval","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQAIaA,EAAqB,uCAAG,4BAAAC,EAAA,sEACVC,IAAMC,IAAN,UAHd,gCAGc,sBADU,UAEV,OADjBC,EAD2B,QAErBC,OAFqB,0CAGtB,GAHsB,gCAI1B,CAAEC,SAAUF,EAASG,KAAKD,SAAUE,UAAWJ,EAASG,KAAKC,YAJnC,2CAAH,qD,gCCoBnBC,MAtBf,YAA0C,IAAlBC,EAAiB,EAAjBA,eAKtB,OACE,8BACE,eAAC,gBAAD,CAAeC,iBAAkB,CAAEC,MAAO,KAAOC,MAAO,IAAKC,OAAQ,IAAKC,MAAO,CAAEF,MAAO,OAAQC,OAAQ,QAA1G,UACE,cAAC,YAAD,CAAWE,OAAO,YAClB,cAAC,cAAD,CAAaC,UANnB,yGAMM,SACG,qBAAGC,YACUC,KAAI,SAAAC,GAAG,OAAI,cAAC,YAAD,CAA4BH,UAAWG,GAAvBA,EAAIC,cAG/C,cAAC,SAAD,CAAQC,YAAa,CAACZ,EAAeF,UAAWE,EAAeJ,UAA/D,SACE,wBAAQiB,EAAG,EAAGC,KAAK,oBCoBdC,MA9Bf,WAAgB,IAAD,EAEmBC,mBAAS,IAF5B,mBAENC,EAFM,KAEIC,EAFJ,OAGqBF,oBAAS,GAH9B,mBAGNG,EAHM,KAGKC,EAHL,KAgBb,OAXAC,qBAAU,WAAO,SACAC,IADD,2EACd,4BAAA/B,EAAA,sEACqBD,IADrB,OACQO,EADR,OAEEqB,EAAYrB,GAFd,4CADc,sBAKdyB,IACAF,GAAa,GACb,IAAMG,EAAWC,YAAYF,EAAU,KACvC,OAAO,kBAAMG,cAAcF,MAC1B,IAGD,sBAAKG,UAAU,MAAf,UACE,4CACA,wGACCP,GAAa,cAAC,IAAD,KACZA,GACA,mCACE,cAAC,EAAD,CAAcnB,eAAiBiB,UCzBzCU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a9288319.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst host = 'https://api.wheretheiss.at/v1';\n\nexport const getCurrentIssLocation = async () => {\n    const response = await axios.get(`${host}/satellites/25544`);\n    if(response.status !== 200)\n        return false;\n    return { latitude: response.data.latitude, longitude: response.data.longitude };\n}","import { ComposableMap, Geographies, Geography, Graticule, Marker } from \"react-simple-maps\";\n\nfunction MapComponent({ markerLocation }){\n\n  const geoUrl =\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n\n  return(\n    <div>\n      <ComposableMap projectionConfig={{ scale: 147 }} width={800} height={400} style={{ width: \"100%\", height: \"auto\" }}>\n        <Graticule stroke=\"#8b97b0\" />\n        <Geographies geography={geoUrl}>\n          {({ geographies }) =>\n            geographies.map(geo => <Geography key={geo.rsmKey} geography={geo} />)\n          }\n        </Geographies>\n        <Marker coordinates={[markerLocation.longitude, markerLocation.latitude]}>\n          <circle r={3} fill=\"#326ae3\" />\n        </Marker>\n      </ComposableMap>\n    </div>\n  )\n}\n\nexport default MapComponent;","import './App.css';\n\nimport { getCurrentIssLocation } from './api/IssNow'\nimport { useEffect, useState } from 'react';\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport MapComponent from './components/MapComponent';\n\nfunction App() {\n\n  const [location, setLocation] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    async function fetchApi(){\n      const data = await getCurrentIssLocation();\n      setLocation(data);\n    }\n    fetchApi();\n    setIsLoading(false);\n    const interval = setInterval(fetchApi, 5000);\n    return () => clearInterval(interval);\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <h1>Where ISS?</h1>\n      <h2>Find where the ISS is currently in relation to our planet ðŸŒŽ</h2>\n      {isLoading && <ClipLoader />}\n      {!isLoading &&\n        <>\n          <MapComponent markerLocation={ location }></MapComponent>\n        </>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}